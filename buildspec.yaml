version: 0.2

env:
  variables:
      BC_SOURCE: "codebuild"
      PRISMA_API_URL: "https://api0.prismacloud.io"
      CODEBUILD_GIT_BRANCH: "main"
  parameter-store:
      BC_API_KEY: "bc-api-key"

phases:
  install:
    runtime-versions:
      python: 3.12

    commands:    
      - echo Installing app dependencies...
      - curl -LO https://dl.k8s.io/release/v1.27.2/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client

      - pip3 install checkov
      - echo Installing codebuild-extras...
      - curl -fsSL https://raw.githubusercontent.com/bridgecrewio/aws-codebuild-extras/master/install >> extras.sh
      - . ./extras.sh
    
  pre_build:
    commands:
      - checkov -s -d ./ --bc-api-key $BC_API_KEY --repo-id 266735839757:project/$CODEBUILD_PROJECT
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 266735839757.dkr.ecr.ap-northeast-1.amazonaws.com
      - IMAGE_REPO_NAME=266735839757.dkr.ecr.ap-northeast-1.amazonaws.com/java-app
      - IMAGE_TAG=v1.0.0.RELEASE

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build --tag $IMAGE_REPO_NAME:$IMAGE_TAG .
       
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
      - aws eks update-kubeconfig --name java-app-k8s --region ap-northeast-1
      - echo Push the latest image to cluster
       # Get AWS Credential using STS Assume Role for kubectl
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"          
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - kubectl get svc
      - kubectl apply -f deployment.yaml
      - kubectl get all -A

reports:
  prisma-cloud-infrastructure-security:
    files:
       - test_results.xml
    discard-paths: yes
    file-format: JunitXml 